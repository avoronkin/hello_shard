version: '3'
services:

  rs1_1:
      hostname: rs1_1
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --replSet rs1 --shardsvr
      volumes:
      - ./volumes/rs1_1:/data/db
      networks:
      - mongo
  rs1_2:
      hostname: rs1_2
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --replSet rs1 --shardsvr
      volumes:
      - ./volumes/rs1_2:/data/db
      networks:
      - mongo
  rs1_3:
      hostname: rs1_3
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --replSet rs1 --shardsvr
      volumes:
      - ./volumes/rs1_3:/data/db
      networks:
      - mongo

  config1:
      hostname: config1
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --configsvr --replSet config
      volumes:
        - ./volumes/config1:/data/configdb
      networks:
        - mongo
  config2:
      hostname: config2
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --configsvr --replSet config
      volumes:
        - ./volumes/config2:/data/configdb
      networks:
        - mongo
  config3:
      hostname: config3
      image: $MONGODB_IMAGE
      restart: always
      command: mongod --port 27017 --configsvr --replSet config
      volumes:
        - ./volumes/config3:/data/configdb
      networks:
        - mongo

  router:
      image: $MONGODB_IMAGE
      restart: always
      command: mongos --port 27017 --configdb config/config1:27017,config2:27017,config3:27017 --bind_ip_all
      networks:
      - mongo
      depends_on:
        - config1
        - config2
        - config3
        - rs1_1
        - rs1_2
        - rs1_3

networks:
  mongo: